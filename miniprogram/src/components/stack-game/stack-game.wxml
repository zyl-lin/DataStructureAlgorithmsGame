<view class="stack-game-container">
  <!-- 任务区域 -->
  <view class="task-panel" wx:if="{{task}}">
    <view class="task-title">当前任务</view>
    <view class="task-description">{{task.description}}</view>
  </view>

  <!-- API模式切换 -->
  <view class="mode-selector">
    <view class="mode-option {{isApiMode ? 'active' : ''}} {{isLoading ? 'disabled' : ''}}"
          bindtap="{{isLoading ? '' : 'toggleApiMode'}}"
          data-mode="api">
      API模式
    </view>
    <view class="mode-option {{!isApiMode ? 'active' : ''}} {{isLoading ? 'disabled' : ''}}"
          bindtap="{{isLoading ? '' : 'toggleApiMode'}}"
          data-mode="local">
      本地模式
    </view>
  </view>

  <!-- 动画速度控制 -->
  <view class="speed-control {{showSpeedControl ? 'show' : ''}}" wx:if="{{isApiMode}}">
    <view class="speed-title" bindtap="toggleSpeedControl">
      动画速度 <text class="toggle-icon">{{showSpeedControl ? '▼' : '▶'}}</text>
    </view>
    <view class="speed-slider" wx:if="{{showSpeedControl}}">
      <slider min="1" max="10" value="{{animationSpeed}}" bindchange="setAnimationSpeed" 
              disabled="{{isLoading}}" show-value/>
    </view>
  </view>

  <!-- API错误提示 -->
  <view class="api-error" wx:if="{{apiError}}">
    {{apiError}}
  </view>

  <!-- 栈可视化区域 -->
  <view class="stack-visualization">
    <view class="stack-label">栈顶</view>
    <view class="stack-container">
      <block wx:if="{{stack.length === 0}}">
        <view class="empty-stack">栈为空</view>
      </block>
      <block wx:else>
        <view class="stack-items">
          <view class="stack-item" wx:for="{{stack}}" wx:key="index">
            {{item}}
          </view>
        </view>
      </block>
    </view>
    <view class="stack-label">栈底</view>
  </view>

  <!-- 操作区域 -->
  <view class="stack-operations">
    <view class="input-group">
      <input class="stack-input" type="text" placeholder="输入元素值" bindinput="onValueInput" value="{{currentValue}}" disabled="{{isLoading}}" />
    </view>
    <view class="stack-buttons">
      <button class="operation-btn push-btn" bindtap="onPush" disabled="{{isStackFull || isLoading}}">入栈 (Push)</button>
      <button class="operation-btn pop-btn" bindtap="onPop" disabled="{{isStackEmpty || isLoading}}">出栈 (Pop)</button>
      <button class="operation-btn peek-btn" bindtap="onPeek" disabled="{{isStackEmpty || isLoading}}">查看栈顶 (Peek)</button>
      <button class="operation-btn reset-btn" bindtap="resetStack" disabled="{{isLoading}}">重置栈</button>
    </view>
  </view>

  <!-- 栈信息 -->
  <view class="stack-info">
    <view class="info-item">
      <text class="info-label">栈大小:</text>
      <text class="info-value">{{stack.length}}/{{maxSize}}</text>
    </view>
    <view class="info-item">
      <text class="info-label">状态:</text>
      <text class="info-value" wx:if="{{isStackEmpty}}">空</text>
      <text class="info-value" wx:elif="{{isStackFull}}">满</text>
      <text class="info-value" wx:else>可操作</text>
    </view>
  </view>

  <!-- 操作历史 -->
  <view class="operation-history">
    <view class="history-title">操作历史</view>
    <view class="history-list">
      <view class="history-item" wx:for="{{operationHistory}}" wx:key="index">
        {{item}}
      </view>
      <view class="no-history" wx:if="{{operationHistory.length === 0}}">
        暂无操作记录
      </view>
    </view>
  </view>

  <!-- 加载状态 -->
  <view class="loading-overlay" wx:if="{{isLoading}}">
    <view class="loading-spinner"></view>
  </view>
</view> 