<view class="graph-game-container">
  <!-- 图形渲染区域 -->
  <view class="graph-area">
    <canvas type="2d" id="graph-canvas" class="graph-canvas" bindtap="onCanvasTap"></canvas>
    
    <!-- 节点信息覆盖层 - 用于响应不支持canvas tap事件的系统 -->
    <view class="node-overlay" wx:if="{{nodePositions.length > 0}}">
      <view 
        wx:for="{{nodePositions}}" 
        wx:key="index"
        class="node-touch-area"
        style="left: {{item.x - nodeRadius}}px; top: {{item.y - nodeRadius}}px; width: {{nodeRadius * 2}}px; height: {{nodeRadius * 2}}px;"
        data-index="{{index}}"
        catchtap="onNodeTap"
      ></view>
    </view>
  </view>
  
  <!-- 用户序列显示区域 -->
  <view class="sequence-area">
    <view class="sequence-label">你的遍历序列:</view>
    <view class="sequence-display">
      <view 
        wx:for="{{userSequence}}" 
        wx:key="index"
        class="sequence-node {{index === userSequence.length - 1 ? 'sequence-node-active' : ''}}"
      >
        {{item}}
      </view>
      <view class="sequence-empty" wx:if="{{userSequence.length === 0}}">
        请点击节点开始遍历
      </view>
    </view>
  </view>
  
  <!-- 遍历模式选择 -->
  <view class="mode-selector">
    <view class="mode-label">遍历模式:</view>
    <view class="mode-options">
      <view 
        class="mode-option {{traversalMode === 'dfs' ? 'mode-option-active' : ''}}"
        data-mode="dfs"
        bindtap="changeTraversalMode"
      >
        深度优先 (DFS)
      </view>
      <view 
        class="mode-option {{traversalMode === 'bfs' ? 'mode-option-active' : ''}}"
        data-mode="bfs"
        bindtap="changeTraversalMode"
      >
        广度优先 (BFS)
      </view>
    </view>
  </view>
  
  <!-- API模式切换 -->
  <view class="api-mode-selector">
    <view class="mode-label">执行模式:</view>
    <view class="mode-options">
      <view 
        class="mode-option {{isApiMode ? '' : 'mode-option-active'}}"
        data-mode="local"
        bindtap="toggleApiMode"
      >
        本地执行
      </view>
      <view 
        class="mode-option {{isApiMode ? 'mode-option-active' : ''}}"
        data-mode="api"
        bindtap="toggleApiMode"
      >
        API执行
      </view>
    </view>
  </view>
  
  <!-- 动画速度控制 -->
  <view class="speed-control" wx:if="{{isApiMode && showSpeedControl}}">
    <view class="speed-label">动画速度: {{animationSpeed}}</view>
    <slider 
      min="1" 
      max="10" 
      value="{{animationSpeed}}" 
      show-value="{{false}}"
      bindchange="setAnimationSpeed"
      activeColor="#4caf50"
      backgroundColor="#e0e0e0"
      block-size="24"
      block-color="#4caf50"
    />
    <view class="speed-values">
      <text>慢</text>
      <text>快</text>
    </view>
  </view>
  
  <!-- 起始节点选择区域 - 可选功能 -->
  <view class="start-node-selector" wx:if="{{graphData.nodes.length > 0 && task.allowStartNodeChange}}">
    <view class="start-label">起始节点:</view>
    <view class="start-options">
      <view 
        wx:for="{{graphData.nodes}}" 
        wx:key="index"
        class="start-option {{startNodeIndex === index ? 'start-option-active' : ''}}"
        data-index="{{index}}"
        bindtap="changeStartNode"
      >
        {{item}}
      </view>
    </view>
  </view>
  
  <!-- 反馈信息区域 -->
  <view class="feedback-panel" wx:if="{{showFeedback || apiError}}">
    <view class="feedback-message {{isCorrect ? 'feedback-correct' : 'feedback-incorrect'}}">
      {{apiError || feedbackMessage}}
    </view>
  </view>
  
  <!-- 操作按钮 -->
  <view class="action-buttons">
    <button class="action-btn restart-btn" bindtap="restart" disabled="{{isLoading}}">重新开始</button>
    <button class="action-btn show-btn" bindtap="showCorrectTraversal" wx:if="{{isTraversalComplete && !isCorrect}}" disabled="{{isLoading}}">查看正确答案</button>
    <button class="action-btn start-btn" bindtap="startTraversal" wx:if="{{isApiMode}}" disabled="{{isLoading || isTraversalComplete}}">开始遍历</button>
    <button class="action-btn speed-btn" bindtap="toggleSpeedControl" wx:if="{{isApiMode}}">{{showSpeedControl ? '隐藏速度控制' : '速度设置'}}</button>
  </view>
  
  <!-- 加载状态 -->
  <view class="loading-overlay" wx:if="{{isLoading}}">
    <view class="loading-spinner"></view>
  </view>
</view> 